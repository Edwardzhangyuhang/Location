package com.foxconn.cnsbg.escort.subsys.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig locationEntityDaoConfig;
    private final DaoConfig userEntityDaoConfig;
    private final DaoConfig mainUserEntityDaoConfig;
    private final DaoConfig cachedLocationEntityDaoConfig;
    private final DaoConfig cachedAccelerationEntityDaoConfig;

    private final LocationEntityDao locationEntityDao;
    private final UserEntityDao userEntityDao;
    private final MainUserEntityDao mainUserEntityDao;
    private final CachedLocationEntityDao cachedLocationEntityDao;
    private final CachedAccelerationEntityDao cachedAccelerationEntityDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        locationEntityDaoConfig = daoConfigMap.get(LocationEntityDao.class).clone();
        locationEntityDaoConfig.initIdentityScope(type);

        userEntityDaoConfig = daoConfigMap.get(UserEntityDao.class).clone();
        userEntityDaoConfig.initIdentityScope(type);

        mainUserEntityDaoConfig = daoConfigMap.get(MainUserEntityDao.class).clone();
        mainUserEntityDaoConfig.initIdentityScope(type);

        cachedLocationEntityDaoConfig = daoConfigMap.get(CachedLocationEntityDao.class).clone();
        cachedLocationEntityDaoConfig.initIdentityScope(type);

        cachedAccelerationEntityDaoConfig = daoConfigMap.get(CachedAccelerationEntityDao.class).clone();
        cachedAccelerationEntityDaoConfig.initIdentityScope(type);

        locationEntityDao = new LocationEntityDao(locationEntityDaoConfig, this);
        userEntityDao = new UserEntityDao(userEntityDaoConfig, this);
        mainUserEntityDao = new MainUserEntityDao(mainUserEntityDaoConfig, this);
        cachedLocationEntityDao = new CachedLocationEntityDao(cachedLocationEntityDaoConfig, this);
        cachedAccelerationEntityDao = new CachedAccelerationEntityDao(cachedAccelerationEntityDaoConfig, this);

        registerDao(LocationEntity.class, locationEntityDao);
        registerDao(UserEntity.class, userEntityDao);
        registerDao(MainUserEntity.class, mainUserEntityDao);
        registerDao(CachedLocationEntity.class, cachedLocationEntityDao);
        registerDao(CachedAccelerationEntity.class, cachedAccelerationEntityDao);
    }
    
    public void clear() {
        locationEntityDaoConfig.getIdentityScope().clear();
        userEntityDaoConfig.getIdentityScope().clear();
        mainUserEntityDaoConfig.getIdentityScope().clear();
        cachedLocationEntityDaoConfig.getIdentityScope().clear();
        cachedAccelerationEntityDaoConfig.getIdentityScope().clear();
    }

    public LocationEntityDao getLocationEntityDao() {
        return locationEntityDao;
    }

    public UserEntityDao getUserEntityDao() {
        return userEntityDao;
    }

    public MainUserEntityDao getMainUserEntityDao() {
        return mainUserEntityDao;
    }

    public CachedLocationEntityDao getCachedLocationEntityDao() {
        return cachedLocationEntityDao;
    }

    public CachedAccelerationEntityDao getCachedAccelerationEntityDao() {
        return cachedAccelerationEntityDao;
    }

}
