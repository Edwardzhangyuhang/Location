package com.foxconn.cnsbg.escort.subsys.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.foxconn.cnsbg.escort.subsys.dao.CachedLocData;
import com.foxconn.cnsbg.escort.subsys.dao.CachedBleData;

import com.foxconn.cnsbg.escort.subsys.dao.CachedLocDataDao;
import com.foxconn.cnsbg.escort.subsys.dao.CachedBleDataDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig cachedLocDataDaoConfig;
    private final DaoConfig cachedBleDataDaoConfig;

    private final CachedLocDataDao cachedLocDataDao;
    private final CachedBleDataDao cachedBleDataDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        cachedLocDataDaoConfig = daoConfigMap.get(CachedLocDataDao.class).clone();
        cachedLocDataDaoConfig.initIdentityScope(type);

        cachedBleDataDaoConfig = daoConfigMap.get(CachedBleDataDao.class).clone();
        cachedBleDataDaoConfig.initIdentityScope(type);

        cachedLocDataDao = new CachedLocDataDao(cachedLocDataDaoConfig, this);
        cachedBleDataDao = new CachedBleDataDao(cachedBleDataDaoConfig, this);

        registerDao(CachedLocData.class, cachedLocDataDao);
        registerDao(CachedBleData.class, cachedBleDataDao);
    }
    
    public void clear() {
        cachedLocDataDaoConfig.getIdentityScope().clear();
        cachedBleDataDaoConfig.getIdentityScope().clear();
    }

    public CachedLocDataDao getCachedLocDataDao() {
        return cachedLocDataDao;
    }

    public CachedBleDataDao getCachedBleDataDao() {
        return cachedBleDataDao;
    }

}
